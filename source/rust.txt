.. _rust-language-center:

.. include:: /includes/unicode-checkmark.rst

===================
MongoDB Rust Driver
===================

.. default-domain:: mongodb

.. contents:: On this page
   :local:
   :backlinks: none
   :depth: 1
   :class: twocols

Introduction
------------

This is the official MongoDB Rust Driver.

- `Usage Guide <https://github.com/mongodb/mongo-rust-driver#example-usage>`__

- `API Reference <https://docs.rs/mongodb/latest/mongodb/>`__

- `Changelog <https://github.com/mongodb/mongo-rust-driver/releases>`__

- `Source Code <https://github.com/mongodb/mongo-rust-driver/>`__


Installation
------------

See `Installation <https://github.com/mongodb/mongo-rust-driver#Installation>`__

.. _connect-atlas-rust-driver:

Connect to MongoDB Atlas
------------------------

Select from the :guilabel:`Sync` or :guilabel:`Async` tabs below for
corresponding connection code samples.

.. include:: /includes/atlas-connect-blurb.rst

.. tabs::

   .. tab:: Async
      :tabid: rust-async

      The default async runtime used by the driver is ``tokio``. To use a
      different runtime, see
      `Configuring the async runtime <https://github.com/mongodb/mongo-rust-driver#configuring-the-async-runtime>`__.

      .. code-block:: rust

         use mongodb::{bson::doc, options::ClientOptions, Client};

         #[tokio::main]
         async fn main() -> mongodb::error::Result<()> {
             // Parse your connection string into an options struct
             let mut client_options =
                 ClientOptions::parse("mongodb+srv://<username>:<password>@<cluster-url>/test?w=majority")
                     .await?;

             // Manually set an option
             client_options.app_name = Some("Rust Demo".to_string());

             // Get a handle to the cluster
             let client = Client::with_options(client_options)?;

             // Ping the server to see if you can connect to the cluster
             client
                 .database("admin")
                 .run_command(doc! {"ping": 1}, None)
                 .await?;
             println!("Connected successfully.");

             // List the names of the databases in that cluster
             for db_name in client.list_database_names(None, None).await? {
                 println!("{}", db_name);
             }
             Ok(())
         }

   .. tab:: Sync
      :tabid: rust-sync

      Make sure you enabled the sync API. See
      `Enabling the sync API <https://github.com/mongodb/mongo-rust-driver#enabling-the-sync-api>`__
      for more details.

      .. code-block:: rust

         use mongodb::{bson::doc, sync::Client};

         fn main() -> mongodb::error::Result<()> {
             // Get a handle to the cluster
             let client = Client::with_uri_str(
                 "mongodb+srv://<username>:<password>@<cluster-url>/test?w=majority",
             )?;

             // Ping the server to see if you can connect to the cluster
             client
                 .database("admin")
                 .run_command(doc! {"ping": 1}, None)?;
             println!("Connected successfully.");

             // List the names of the databases in that cluster
             for db_name in client.list_database_names(None, None)? {
                 println!("{}", db_name);
             }
             Ok(())
         }

.. include:: /includes/serverless-compatibility.rst

Connect to a MongoDB Server on Your Local Machine
-------------------------------------------------

.. include:: /includes/localhost-connection.rst

To test whether you can connect to your server, replace the connection
string in the :ref:`Connect to MongoDB Atlas <connect-atlas-rust-driver>` code
example and run it.

Compatibility
-------------

MongoDB Compatibility
~~~~~~~~~~~~~~~~~~~~~

.. include:: /includes/mongodb-compatibility-table-rust.rst

Language Compatibility
~~~~~~~~~~~~~~~~~~~~~~

.. include:: /includes/language-compatibility-table-rust.rst

.. include:: /includes/about-driver-compatibility.rst

.. include:: /includes/help-links-rust.rst
