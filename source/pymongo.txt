.. include:: /includes/unicode-checkmark.rst

=======
PyMongo
=======

.. default-domain:: mongodb

.. contents:: On this page
   :local:
   :backlinks: none
   :depth: 2
   :class: singlecol

Introduction
------------

**PyMongo** is the official MongoDB Python driver for MongoDB. We
recommend you use this driver to work with MongoDB from Python. If you
need to access MongoDB in a non-blocking manner or from co-routines, we
recommend that you use the :doc:`Motor </motor>` driver instead.

Follow the links below to learn more about how to use the PyMongo driver:

- `Tutorial <https://pymongo.readthedocs.io/en/stable/tutorial.html>`__ on
  how to connect to MongoDB and run common operations.

- `API Reference <https://pymongo.readthedocs.io/en/stable/api/index.html>`__

- `Changelog <https://pymongo.readthedocs.io/en/stable/changelog.html>`__

- `Source Code <https://github.com/mongodb/mongo-python-driver>`__

.. include:: /includes/university-m220p.rst

Installation
------------

You must install the PyMongo driver module to make it available to your Python
application. We recommend using `pip <http://pypi.python.org/pypi/pip>`__
to install PyMongo.

The following command demonstrates how you can install the latest version of
the module using the command line:

.. code-block:: sh

   $ python -m pip install 'pymongo[srv]'

If you need to install a specific version of ``pymongo``, specify the
version in your command. The following command shows how you can use
``pip`` to install PyMongo version ``3.11``:

.. code-block:: sh

   $ python -m pip install 'pymongo[srv]'==3.11

If you already have PyMongo installed and need to upgrade to the latest
version, use the following ``pip`` command:

.. code-block:: sh

   $ python -m pip install --upgrade 'pymongo[srv]'

See `Installation <https://pymongo.readthedocs.io/en/stable/installation.html>`__
for more ways to install PyMongo.


Connect to MongoDB Atlas
------------------------

.. include:: /includes/atlas-connect-blurb.rst

.. code-block:: python

   import pymongo

   # replace this with your MongoDB connection string
   conn_str = "<your MongoDB Atlas connection string>"

   # set a 5-second connection timeout
   client = pymongo.MongoClient(conn_str, serverSelectionTimeoutMS=5000)

   try:
       print(client.server_info())
   except Exception:
       print("Unable to connect to the server.")

If the connection succeeds before a five-second timeout, you will see a
dictionary containing information about the server you connected to.

If the connection fails, you should see the following message:

.. code-block:: console
   :copyable: false

   Unable to connect to the server.

For more information on the connection string, see the MongoDB Server
Manual entry on :manual:`Connection String URI Format </reference/connection-string/>`.

Connect to ``localhost``
------------------------

.. include:: /includes/localhost-connection.rst

Compatibility
-------------

MongoDB Compatibility
~~~~~~~~~~~~~~~~~~~~~

.. include:: /includes/mongodb-compatibility-table-python.rst

.. include:: /includes/older-server-versions-unsupported.rst

Language Compatibility
~~~~~~~~~~~~~~~~~~~~~~

.. include:: /includes/extracts/python-driver-compatibility-matrix-language.rst

.. include:: /includes/language-compatibility-table-python.rst

.. include:: /includes/about-driver-compatibility.rst

.. include:: /includes/help-links-pymongo.rst
