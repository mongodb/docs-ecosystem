.. _php-language-center:

.. include:: /includes/unicode-checkmark.rst

==================
MongoDB PHP Driver
==================

.. default-domain:: mongodb

.. contents:: On this page
   :local:
   :backlinks: none
   :depth: 1
   :class: twocols

Introduction
------------

The PHP driver consists of two components, the MongoDB `extension <https://github.com/mongodb/mongo-php-driver>`_
and `library <https://docs.mongodb.com/php-library/current>`_.

The extension provides a low-level API and mainly serves to integrate
`libmongoc and libbson <https://docs.mongodb.com/ecosystem/drivers/c/>`_ with PHP.

While it is possible to use the extension alone, users are strongly encouraged
to use the extension and library together. The library provides a high-level API
consistent with other MongoDB language drivers.

- `Tutorials <https://docs.mongodb.com/php-library/current/tutorial>`__

- `Extension Architecture and Internals <https://www.php.net/manual/en/mongodb.architecture.php>`__

- Documentation

  - `Library <https://docs.mongodb.com/php-library/current>`__

  - `Extension <https://php.net/mongodb>`__

- Changelog

  - `Library <https://github.com/mongodb/mongo-php-library/releases>`__

  - `Extension <https://github.com/mongodb/mongo-php-driver/releases>`__

- Source Code

  - `Library <https://github.com/mongodb/mongo-php-library>`__

  - `Extension <https://github.com/mongodb/mongo-php-driver>`__


Installation
------------

Installation of the Library requires the Extension being installed first.

You can install the extension using
`PECL <https://www.php.net/manual/en/mongodb.installation.pecl.php>`_:

.. code-block:: sh

   $ pecl install mongodb
   $ echo "extension=mongodb.so" >> `php --ini | grep "Loaded Configuration" | sed -e "s|.*:\s*||"`

The preferred method of installing the PHP library is with
`Composer <https://getcomposer.org/>`_ by running the following from your project root:

.. code-block:: sh

   $ composer require mongodb/mongodb


Additional installation instructions may be found in the
`library documentation <https://docs.mongodb.com/php-library/current/tutorial/install-php-library/>`_.


Connect to MongoDB Atlas
------------------------

To connect to a `MongoDB Atlas <https://docs.atlas.mongodb.com/>`_ cluster, use the `Atlas connection string <https://docs.atlas.mongodb.com/driver-connection>`__ for your cluster:

.. code-block:: php

   <?php

   $client = new MongoDB\Client(
       'mongodb+srv://<username>:<password>@<cluster-address>/test?retryWrites=true&w=majority'
   );

   $db = $client->test;


Compatibility
-------------

Due to potential problems representing 64-bit integers on 32-bit platforms,
users are advised to use 64-bit environments. When using a 32-bit platform, be
aware that any 64-bit integer read from the database will be returned as a
`MongoDB\BSON\Int64 <https://www.php.net/manual/en/class.mongodb-bson-int64.php>`_
instance instead of a PHP integer type.

MongoDB Compatibility
~~~~~~~~~~~~~~~~~~~~~

.. include:: /includes/extracts/php-driver-compatibility-matrix-mongodb.rst

.. include:: /includes/php-mongodb-compatibility-table.rst

.. include:: /includes/extracts/php-driver-compatibility-full-mongodb.rst

Language Compatibility
~~~~~~~~~~~~~~~~~~~~~~

.. include:: /includes/language-compatibility-table-php.rst

How to get help
---------------

- Join our `Google Group <https://groups.google.com/forum/#!forum/mongodb-user>`__.
- Ask on `Stack Overflow <https://stackoverflow.com/questions/tagged/mongodb+php>`__.
- Visit our `Support Channels <https://docs.mongodb.com/manual/support/>`__.
- See our JIRA to raise issues or request features.

  - `Extension <https://jira.mongodb.org/projects/PHPC/summary>`__

  - `Library <https://jira.mongodb.org/projects/PHPLIB/summary>`__


See Also
--------

- :ref:`php-libraries-frameworks-and-tools`

.. class:: hidden

   .. toctree::
      :titlesonly:

      /drivers/php-libraries



