# table structure. all content symbolic.
section: layout
header: [ meta.header1, meta.header2, meta.header3, meta.header4, meta.header5, meta.header6, meta.header7, meta.header8]
rows: 
  - 1: [ content.code11, content.code12, content.code13, content.code14, content.code15, content.code16, content.code17, content.code18 ]
  - 2: [ content.code21, content.code22, content.code23, content.code24, content.code25, content.code26, content.code27, content.code28 ]
  - 3: [ content.code31, content.code32, content.code33, content.code34, content.code35, content.code36, content.code37, content.code38 ]
  - 4: [ content.code41, content.code42, content.code43, content.code44, content.code45, content.code46, content.code47, content.code48 ]
  - 5: [ content.code51, content.code52, content.code53, content.code54, content.code55, content.code56, content.code57, content.code58 ]
  - 6: [ content.code61, content.code62, content.code63, content.code64, content.code65, content.code66, content.code67, content.code68 ]
  - 7: [ content.code71, content.code72, content.code73, content.code74, content.code75, content.code76, content.code77, content.code78 ]
  - 8: [ content.code81, content.code82, content.code83, content.code84, content.code85, content.code86, content.code87, content.code88 ]
---
# table metadata, as meta.<key>
section: meta
header1: "JavaScript"
header2: "Python"
header3: "PHP"
header4: "Ruby"
header5: "Java"
header6: "C++"
header7: "C#"
header8: "Perl"
---
# table content, as content.<key>
section: content

code11: |
         .. code-block:: javascript

            [ ]
code12: |
         .. code-block:: python 

            []
code13: |
         .. code-block:: php 

            array()
code14: |
         .. code-block:: ruby

            []
code15: |
         .. code-block:: java 

            BasicDBList
code16: |
         .. code-block:: cpp 

            BSONObj

         or

         .. code-block:: cpp

            bson::bo
code17: |
         .. code-block:: csharp 

            BsonArray
code18: |
         .. code-block:: perl 

            [ ]
code21: |
         .. code-block:: javascript

            {}
code22: |
         .. code-block:: python 

            {}
code23: |
         .. code-block:: php 

            new stdClass
code24: |
         .. code-block:: ruby

            {}
code25: |
         .. code-block:: java 

            BasicDBObject
code26: |
         .. code-block:: cpp 

            BSONObj
code27: |
         .. code-block:: csharp 

            BsonDocument
code28: |
         .. code-block:: perl 

            {}
code31: |
         .. code-block:: javascript

            { x : 1 }
code32: |
         .. code-block:: python 

            {"x": 1}
code33: |
         .. code-block:: php 

            array('x' => 1)
code34: |
         .. code-block:: ruby

            {'x' => 1}
code35: |
         .. code-block:: java 

            BasicDBObjectBuilder.start().add("x", 1).get()
code36: |
         .. code-block:: cpp 

            BSONObjBuilder().append("x", 1).obj();
            BSON( "x" << 1 )
code37: |
         .. code-block:: csharp 

            new BsonDocument("x", 1)
code38: |
         .. code-block:: perl 

            { x : 1 }
code41: |
         .. code-block:: javascript

            connect("localhost");
code42: |
         .. code-block:: python

            MongoClient("mongodb://localhost")
code43: |
         .. code-block:: php

            new MongoClient("mongodb://localhost");
code44: |
         .. code-block:: ruby

            MongoClient.new("mongodb://localhost")
code45: |
         .. code-block:: java

            MongoClientURI uri = new MongoClientURI("mongodb://localhost");
            MongoClient client = new MongoClient(uri);
code46: |
         .. code-block:: cpp

            mongo::DBClientConnection conn;
            conn.connect("mongodb://localhost");
code47: |
         .. code-block:: csharp 

            var client = new MongoClient("mongodb://localhost");
            var server = client.GetServer();
code48: |
         .. code-block:: perl 

            MongoDB::MongoClient->new(host => 'mongodb://localhost')
code51: |
         .. code-block:: javascript

            cursor.next()
code52: |
         .. code-block:: python 

            cursor.next()
code53: |
         .. code-block:: php 

            $cursor->getNext()
code54: |
         .. code-block:: ruby

            cursor.next
code55: |
         .. code-block:: java 

            cursor.next()
code56: |
         .. code-block:: cpp 

            cursor.next()
code57: |
         .. code-block:: csharp 

            foreach (var document in cursor)
code58: |
         .. code-block:: perl 

            $cursor->next()
code61: |
         .. code-block:: javascript

            cursor.hasNext()
code62: "Does not exist"
code63: |
         .. code-block:: php 

            $cursor->hasNext()
code64: |
         .. code-block:: ruby

            cursor.has_next?
code65: |
         .. code-block:: java 

            cursor.hasNext()
code66: |
         .. code-block:: cpp 

            cursor.more()
code67: " "
code68: |
         .. code-block:: perl 

            $cursor->has_next()
code71: |
         .. code-block:: javascript

            collection.findOne()
code72: |
         .. code-block:: python 

            collection.find_one()
code73: |
         .. code-block:: php 

            $collection->findOne()
code74: |
         .. code-block:: ruby

            collection.find_one
code75: |
         .. code-block:: java 

            collection.findOne()
code76: |
         .. code-block:: cpp 

            connection.findOne(namespace, query)
code77: |
         .. code-block:: csharp 

            collection.FindOne()
code78: |
         .. code-block:: perl 

            $collection->find_one()
code81: |
         .. code-block:: javascript

            db.eval()
code82: |
         .. code-block:: python 

            db.eval()
code83: |
         .. code-block:: php 

            $db->execute()
code84: |
         .. code-block:: ruby

            db.eval("return sum(2,3);")
code85: |
         .. code-block:: java 

            db.doEval()
code86: |
         .. code-block:: cpp 

            connection.eval()
code87: |
         .. code-block:: csharp 

            db.Eval(js)
code88: |
         .. code-block:: perl 

            $db->eval()
...
