title: Create the local master key
ref: create-local-master-key
level: 4
content: |
  Generate the local master key and save it to a file. You should only need to run this once:

  .. tabs::

     tabs:

       - id: java-master-key-generator
         name: "Java"
         content: |

           .. code-block:: java

             import java.io.FileOutputStream;
             import java.io.IOException;
             import java.security.SecureRandom;

             public class CreateMasterKeyFile {
               public static void main(final String[] args) {

                 final byte[] localMasterKey = new byte[96];
                 new SecureRandom().nextBytes(localMasterKey);

                 String path = "master-key.txt";
                 try (FileOutputStream stream = new FileOutputStream(path)) {
                   stream.write(localMasterKey);
                 } catch (IOException e)  {
                   e.printStackTrace();
                 }
               }
             }

---
title: Load the local master key into the client settings 
ref: load-local-master-key
level: 4
content: |
  Next, in our MongoDB client application, add the following logic to read the master key from the file we created and construct the KMS settings:

  .. tabs::

     tabs:

       - id: java-local-master-key-settings
         name: "Java"
         content: |

           .. code-block:: java

             byte[] masterKey = new byte[96];
             String path = "master-key.txt";
             try (FileInputStream fis = new FileInputStream(path)) {
               masterKey = fis.readAllBytes();
             } catch (IOException e) {
               e.printStackTrace();
             }

             // Specify a local master key in the KMS provider settings
             Map<String, Map<String, Object>> kmsProviders = new HashMap<String, Map<String, Object>>() {{
               put("local", new HashMap<String, Object>() {{
                   put("key", localMasterKey);
               }});
             }};
