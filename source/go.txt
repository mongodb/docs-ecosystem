.. _go-language-center:

.. include:: /includes/unicode-checkmark.rst

=================
MongoDB Go Driver
=================

.. default-domain:: mongodb

.. contents:: On this page
   :local:
   :backlinks: none
   :depth: 1
   :class: twocols

Introduction
------------

This is the official MongoDB Go Driver.

- `Quick Start Tutorials <https://www.mongodb.com/blog/search/golang%20quickstart>`__

- `Migration from Community Drivers <https://www.mongodb.com/blog/post/go-migration-guide>`__

- `API Reference <https://godoc.org/go.mongodb.org/mongo-driver/mongo>`__

- `Changelog <https://github.com/mongodb/mongo-go-driver/releases>`__

- `Source Code <https://github.com/mongodb/mongo-go-driver>`__

Installation
------------

The recommended way to get started using the MongoDB Go driver is by using
`Go modules <https://blog.golang.org/v2-go-modules>`__

.. code-block:: go

   mkdir goproj
   cd goproj
   go mod init goproj
   go get go.mongodb.org/mongo-driver/mongo

See `Installation <https://github.com/mongodb/mongo-go-driver#installation>`__
for additional ways to add the driver to your project.

.. _connect-atlas-go-driver:

Connect to MongoDB Atlas
------------------------

.. include:: /includes/atlas-connect-blurb.rst

.. literalinclude:: /includes/connection-snippets/go-connection.go
   :language: go

.. include:: /includes/serverless-compatibility.rst

See `Usage <https://github.com/mongodb/mongo-go-driver#usage>`__
for more detail.

Versioned API
-------------

You can use the `Versioned API
<https://docs.mongodb.com/v5.0/reference/versioned-api/>`__ feature
starting with MongoDB Server version 5.0 and Go Driver version 1.6. When
you use the Versioned API feature, you can update your driver or server
without worrying about backward compatibility issues with any commands
covered by the Versioned API. To use this feature, construct a MongoDB
client instance, specifying a version of the Versioned API:

.. code-block:: go

   // Replace <connection string> with your MongoDB deployment's connection string.
   uri := "<connection string>"
   
   ctx := context.TODO()
   
   // Set the version of the Versioned API on the client.
   serverAPIOptions := options.ServerAPI(options.ServerAPIVersion1)
   clientOptions := options.Client().ApplyURI(uri).SetServerAPIOptions(serverAPIOptions)
   
   client, err := mongo.Connect(ctx, clientOptions)

Connect to a MongoDB Server on Your Local Machine
-------------------------------------------------

.. include:: /includes/localhost-connection.rst

To test whether you can connect to your server, replace the connection
string in the :ref:`Connect to MongoDB Atlas <connect-atlas-go-driver>` code
example and run it.

Compatibility
-------------

MongoDB Compatibility
~~~~~~~~~~~~~~~~~~~~~

.. include:: /includes/mongodb-compatibility-table-go.rst

Language Compatibility
~~~~~~~~~~~~~~~~~~~~~~

.. include:: /includes/language-compatibility-table-go.rst

.. include:: /includes/about-driver-compatibility.rst

.. include:: /includes/help-links-go.rst
