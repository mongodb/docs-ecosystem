.. _go-language-center:

.. include:: /includes/unicode-checkmark.rst

=================
MongoDB Go Driver
=================

.. default-domain:: mongodb

.. contents:: On this page
   :local:
   :backlinks: none
   :depth: 1
   :class: twocols

Introduction
------------

This is the official MongoDB Go Driver.

- `Quick Start Tutorials <https://www.mongodb.com/blog/search/golang%20quickstart>`__

- `Migration from Community Drivers <https://www.mongodb.com/blog/post/go-migration-guide>`__

- `API Reference <https://godoc.org/go.mongodb.org/mongo-driver/mongo>`__

- `Changelog <https://github.com/mongodb/mongo-go-driver/releases>`__

- `Source Code <https://github.com/mongodb/mongo-go-driver>`__

Installation
------------

The recommended way to get started using the MongoDB Go driver is by using
`Go modules <https://blog.golang.org/v2-go-modules>`__

.. code-block:: go

   mkdir goproj
   cd goproj
   go mod init goproj
   go get go.mongodb.org/mongo-driver/mongo

See `Installation <https://github.com/mongodb/mongo-go-driver#installation>`__
for additional ways to add the driver to your project.

Connect to MongoDB Atlas
------------------------

.. include:: /includes/atlas-connect-blurb.rst

.. literalinclude:: /includes/connection-snippets/go-connection.go
   :language: go

See `Usage <https://github.com/mongodb/mongo-go-driver#usage>`__
for more detail.

Versioned API
-------------

Starting with MongoDB 5.0 and Go Driver Version 1.6, you can configure your MongoDB client
instance to use the Versioned API. The Versioned API maintains backwards
compatibility, which means that you can deploy your app and upgrade your MongoDB
server without changing any code or updating your driver. To use the
Versioned API, use the
:atlas:`Atlas connection string </driver-connection>` for your cluster
and specify the API Version:

.. code-block:: go

   // Replace the uri string with your MongoDB deployment's connection string.
   uri := "mongodb+srv://<username>:<password>@<cluster-address>/test?w=majority"
   
   // Set the versioned API version on the client.
   serverAPIOptions := options.ServerAPI(options.ServerAPIVersion1)
   clientOptions := options.Client().ApplyURI(uri).SetServerAPIOptions(serverAPIOptions)
   ctx := context.TODO()
   
   client, err := mongo.Connect(ctx, clientOptions)

Connect to ``localhost``
------------------------

.. include:: /includes/localhost-connection.rst

Compatibility
-------------

MongoDB Compatibility
~~~~~~~~~~~~~~~~~~~~~

.. include:: /includes/mongodb-compatibility-table-go.rst

Language Compatibility
~~~~~~~~~~~~~~~~~~~~~~

.. include:: /includes/language-compatibility-table-go.rst

.. include:: /includes/about-driver-compatibility.rst

.. include:: /includes/help-links-go.rst
