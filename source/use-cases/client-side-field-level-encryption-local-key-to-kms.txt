=====================================================================
Client-Side Field Level Encryption: Use a KMS to Store the Master Key
=====================================================================

.. default-domain:: mongodb

.. contents:: On this page
   :local:
   :backlinks: none
   :depth: 2
   :class: singlecol

.. _fle-convert-to-a-remote-master-key:

Introduction
------------

This guide is intended to help users with existing Client-Side Field Level
Encryption (CSFLE) implementations who are using a master key located on their
filesystem. It details how to convert to using a remote key management service
such as Amazon KMS, readying their application for production.

For a detailed walthrough of CSFLE with an example use-case, see our
`CSFLE guide </use-cases/client-side-field-level-encryption-guide>`_.

Why a KMS
---------

Using a remote KMS is much better from a security standpoint. All configured
clients can access the master encryption key, also known as the
**Customer Master Key** (CMK), with the key being stored in one location. This
provides stronger access and data control than copying the key to each client
machine.

Additionally, MongoDB trasmits the data encryption keys to the KMS for
encrypting and decrypting, ensuring the CMK never leaves the KMS.

Convert to a Remote Master Key
------------------------------

.. admonition:: Decrypt all data prior to changing keys
   :class: warning

   Prior to switching to a remote master key, ensure you decrypt all data
   stored with the old master key and data encryption keys generated with it.

   Failure to decrypt all data at this stage may cause permanent and
   unrecoverable data loss.

The following diagrams shows how the **customer master key** and **data
encryption keys** are created and stored when using a KMS provider for
MongoDB CSFLE:

.. image:: /figures/CSFLE_Master_Key_KMS.png
   :alt: Diagram that describes creating a master key when using a KMS provider

.. image:: /figures/CSFLE_Data_Key_KMS.png
   :alt: Diagram that describes creating a data encryption key when using a KMS provider

.. include:: /includes/steps/fle-convert-to-a-remote-master-key.rst

For more information on client-side field level encryption in MongoDB,
check out the reference docs in the server manual:

- :manual:`Client-Side Field Level Encryption </core/security-client-side-encryption>`
- :manual:`Automatic Encryption JSON Schema Syntax </reference/security-client-side-automatic-json-schema>`
- :manual:`Manage Client-Side Encryption Data Keys </tutorial/manage-client-side-encryption-data-keys>`
