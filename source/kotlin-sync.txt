==================
Kotlin Sync Driver
==================

.. default-domain:: mongodb

.. contents:: On this page
   :local:
   :backlinks: none
   :depth: 1
   :class: twocols


Introduction
------------

Welcome to the documentation site for the Kotlin Sync Driver, the
official MongoDB driver for synchronous Kotlin applications.

- `API Documentation <{+java-api+}/apidocs/mongodb-driver-kotlin-sync/>`__

- `Source Code <https://github.com/mongodb/mongo-java-driver/tree/master/driver-kotlin-sync/>`__

If you need to make asynchronous calls between your application and MongoDB with
coroutines, use the :driver:`MongoDB Kotlin Coroutine Driver </kotlin/coroutine/current/>`
instead of the Sync Driver.

Installation
------------

The recommended way to get started using the driver in your project is with
a dependency management system.

If you are using `Gradle <https://gradle.org/>`__, add the following to your
``build.gradle.kts`` dependencies list:

.. code-block:: xml
   :caption: build.gradle.kts

   dependencies {
    implementation("org.mongodb:mongodb-driver-kotlin-sync:{+java-version-full+}")
   }

If you are using `Maven <https://maven.apache.org/>`__, add the following to
your ``pom.xml`` dependencies list:

.. code-block:: xml
   :caption: pom.xml

   <dependencies>
      <dependency>
         <groupId>org.mongodb</groupId>
         <artifactId>mongodb-driver-kotlin-sync</artifactId>
         <version>{+java-version-full+}</version>
      </dependency>
   </dependencies>

.. _connect-atlas-kotlin-sync-driver:

Connect to MongoDB Atlas
------------------------

.. include:: /includes/atlas-connect-blurb.rst

.. code-block:: kotlin

   import com.mongodb.ConnectionString
   import com.mongodb.kotlin.client.sync.MongoClient
   import com.mongodb.kotlin.client.sync.MongoDatabase
   import com.mongodb.MongoClientSettings

   // Replace the placeholder with your Atlas connection string
   val uri = "<connection string>"

   val settings = MongoClientSettings.builder()
      .applyConnectionString(ConnectionString(uri))
      .retryWrites(true)
      .build()

   // Create a new client and connect to the server
   val mongoClient = MongoClient.create(settings)
   val database = mongoClient.getDatabase("test")

.. include:: /includes/serverless-compatibility.rst

{+stable-api+}
--------------

You can use the {+stable-api+} feature starting with MongoDB Server version
5.0 and Kotlin Sync Driver. When you use the
{+stable-api+} feature, you can update your driver or server without worrying
about backward compatibility issues with any commands covered by the
{+stable-api+}.

.. include:: /includes/stable-api-notice.rst

To use this feature, construct a MongoDB client instance, specifying a version
of the {+stable-api+}:

.. literalinclude:: /includes/stable-api-snippets/kotlin-sync-client.kt
   :language: kotlin

Connect to a MongoDB Server on Your Local Machine
-------------------------------------------------

.. include:: /includes/localhost-connection.rst

To test whether you can connect to your server, replace the connection
string in the :ref:`Connect to MongoDB Atlas <connect-atlas-kotlin-sync-driver>`
code example and run it.

Compatibility
-------------

MongoDB Compatibility
~~~~~~~~~~~~~~~~~~~~~

The following compatibility table specifies the recommended version(s) of
the MongoDB Kotlin Sync driver for use with a specific version of MongoDB.

The first column lists the driver version.

.. sharedinclude:: dbx/lifecycle-schedule-callout.rst

.. include:: /includes/mongodb-compatibility-table-kotlin-sync.rst

.. include:: /includes/older-server-versions-unsupported.rst

Language Compatibility
~~~~~~~~~~~~~~~~~~~~~~

.. include:: /includes/language-compatibility-table-kotlin-sync.rst

.. include:: /includes/about-driver-compatibility.rst

.. include:: /includes/help-links-kotlin.rst

